# Variable files
#terraform.tfvars

### https://raw.github.com/github/gitignore/abad92dac5a4306f72242dae3bca6e277bce3615/Terraform.gitignore

# Compiled files
*.tfstate
*.tfstate.backup
*.tfvars
*.tfplan

**/.terraform.lock.hcl

# Terraform directory
.terraform/
terraform.tfstate.d/
logs/

# Go vendor directory
vendor/

# Files generated by terratest
.test-data/

# Terraform log file
terraform.log

### https://raw.github.com/github/gitignore/abad92dac5a4306f72242dae3bca6e277bce3615/Global/Vim.gitignore

# swap
[._]*.s[a-w][a-z]
[._]s[a-w][a-z]
# session
Session.vim
# temporary
.netrwhist
*~
# auto-generated tag files
tags

# IDE configs
.idea

# Ruby download package lock file.
Gemfile.lock

# Mac folder attribute file
.DS_Store

.terraform.tfstate.lock.info

# SSH Key
private_ssh_key

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
!examples/**/main.tf
!examples/**/terraform.tfvars

# Exclude tests files you do wish to add to version control using negated pattern
#
tests/**
tests/**/terraform.tfvars
test/go.sum

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
!**/*.tfvars
infrastructure/terraform/destroy.tfplan
infrastructure/terraform/*.plan
infrastructure/terraform/03-modules.management.budgets.tf
